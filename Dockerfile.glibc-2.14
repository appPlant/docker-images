# MIT License
#
# Copyright (c) 2017 appPlant
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation tasks (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

FROM ubuntu:17.10
MAINTAINER Sebastian Katzer "katzer@appplant.de"

RUN apt-get update && apt-get install -y --no-install-recommends \
    automake \
    bison \
    build-essential \
    ca-certificates \
    clang \
    cmake \
    curl \
    file \
    g++-multilib \
    gcc-multilib \
    git \
    libtool \
    llvm-dev \
    make \
    mingw-w64 \
    mingw-w64-tools \
    msitools \
    musl musl-dev musl-tools \
    sed \
    tar \
    vim \
    wget

# ruby
RUN mkdir -p /opt/ruby-2.4.2/ && \
    curl -s https://s3-external-1.amazonaws.com/heroku-buildpack-ruby/cedar-14/ruby-2.4.2.tgz | tar xzC /opt/ruby-2.4.2/
ENV PATH /opt/ruby-2.4.2/bin:$PATH
RUN echo "gem: --no-document" > ~/.gemrc && \
    gem install rake bundler

# osx cross compiling tools
RUN cd /opt/ && git clone -q https://github.com/tpoechtrager/osxcross.git
COPY MacOSX10.11.sdk.tar.xz /opt/osxcross/tarballs/
RUN echo "\n" | bash /opt/osxcross/build.sh
RUN rm /opt/osxcross/tarballs/*
ENV PATH /opt/osxcross/target/bin:$PATH
ENV MACOSX_DEPLOYMENT_TARGET 10.5

RUN cd /opt && \
    curl -s https://zlib.net/zlib-1.2.11.tar.gz | tar xzC . && mv zlib-1.2.11 zlib && \
    curl -s https://tls.mbed.org/download/mbedtls-2.6.0-apache.tgz | tar xzC . && mv mbedtls-2.6.0 mbedtls && \
    curl -s https://www.libssh2.org/download/libssh2-1.8.0.tar.gz | tar xzC . && mv libssh2-1.8.0 ssh2 && \
    curl -s https://curl.haxx.se/download/curl-7.57.0.tar.gz | tar xzC . && mv curl-7.57.0 curl

RUN apt-get remove -y curl

ENV LINUX_OPTS -DCMAKE_INSTALL_PREFIX=/usr
ENV LINUX32_OPTS $LINUX_OPTS -DCMAKE_INSTALL_LIBDIR=lib/i386-linux-gnu -DCMAKE_C_FLAGS='-m32 -march=i686'
ENV LINUX64_OPTS $LINUX_OPTS -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu

ENV OSX_OPTS -DCMAKE_SYSTEM_NAME=Darwin -DCMAKE_HOST_SYSTEM_NAME=Darwin -DCMAKE_CROSSCOMPILING=TRUE -DCMAKE_FIND_ROOT_PATH=/opt/osxcross/target/SDK/MacOSX10.11.sdk/usr -DCMAKE_OSX_SYSROOT=/opt/osxcross/target/SDK/MacOSX10.11.sdk -DCMAKE_INSTALL_PREFIX=/opt/osxcross/target/SDK/MacOSX10.11.sdk/usr
ENV OSX32_OPTS $OSX_OPTS -DCMAKE_C_COMPILER=i386-apple-darwin15-clang -DCMAKE_FIND_ROOT_PATH=/usr/i386-apple-darwin15 -DCMAKE_INSTALL_PREFIX=/usr/i386-apple-darwin15
ENV OSX64_OPTS $OSX_OPTS -DCMAKE_C_COMPILER=x86_64-apple-darwin15-clang -DCMAKE_FIND_ROOT_PATH=/usr/x86_64-apple-darwin15 -DCMAKE_INSTALL_PREFIX=/usr/x86_64-apple-darwin15

ENV WIN_OPTS -DCMAKE_SYSTEM_NAME=Windows -DCMAKE_HOST_SYSTEM_NAME=Windows -DCMAKE_CROSSCOMPILING=TRUE
ENV WIN32_OPTS $WIN_OPTS -DCMAKE_C_COMPILER=i686-w64-mingw32-gcc -DCMAKE_RC_COMPILER=i686-w64-mingw32-windres -DCMAKE_FIND_ROOT_PATH=/usr/i686-w64-mingw32 -DCMAKE_INSTALL_PREFIX=/usr/i686-w64-mingw32
ENV WIN64_OPTS $WIN_OPTS -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc -DCMAKE_RC_COMPILER=x86_64-w64-mingw32-windres -DCMAKE_FIND_ROOT_PATH=/usr/x86_64-w64-mingw32 -DCMAKE_INSTALL_PREFIX=/usr/x86_64-w64-mingw32

# zlib
RUN cd /opt/zlib && \
    ./configure \
        --prefix /usr \
        --libdir /usr/lib/x86_64-linux-gnu \
        --includedir /usr/include \
        --shared && \
    make install && make clean
RUN cd /opt/zlib && \
    CFLAGS='-m32 -march=i686' ./configure \
        --prefix /usr \
        --libdir /usr/lib/i386-linux-gnu \
        --includedir /usr/include \
        --shared && \
    make install && make clean
RUN cd /opt/zlib && \
    ln -s /opt/osxcross/target/bin/x86_64-apple-darwin15-libtool /usr/bin/libtool && \
    CC=x86_64-apple-darwin15-clang \
    CHOST=x86_64-apple-darwin15 \
    ./configure \
        --prefix /usr/x86_64-apple-darwin15 \
        --libdir /usr/x86_64-apple-darwin15/lib \
        --includedir /usr/x86_64-apple-darwin15/include \
        --shared && \
    make install && make clean && rm -d /usr/bin/libtool
RUN cd /opt/zlib && \
    ln -s /opt/osxcross/target/bin/i386-apple-darwin15-libtool /usr/bin/libtool && \
    CC=i386-apple-darwin15-clang \
    CHOST=i386-apple-darwin15 \
    ./configure \
        --prefix /usr/i386-apple-darwin15 \
        --libdir /usr/i386-apple-darwin15/lib \
        --includedir /usr/i386-apple-darwin15/include \
        --shared && \
    make install && make clean && rm -d /usr/bin/libtool
RUN cd /opt/zlib && \
    BINARY_PATH=/usr/x86_64-w64-mingw32/lib \
    LIBRARY_PATH=/usr/x86_64-w64-mingw32/lib \
    INCLUDE_PATH=/usr/x86_64-w64-mingw32/include \
    make install \
        -f win32/Makefile.gcc \
        PREFIX=x86_64-w64-mingw32- \
        SHARED_MODE=1 && \
    make clean
RUN cd /opt/zlib && \
    BINARY_PATH=/usr/i686-w64-mingw32/lib \
    LIBRARY_PATH=/usr/i686-w64-mingw32/lib \
    INCLUDE_PATH=/usr/i686-w64-mingw32/include \
    make install \
        -f win32/Makefile.gcc \
        PREFIX=i686-w64-mingw32- \
        SHARED_MODE=1 && \
    make clean

# mbedtls
ENV MBED_OPTS -DENABLE_TESTING=OFF -DENABLE_PROGRAMS=OFF -DENABLE_ZLIB_SUPPORT=ON -DLINK_WITH_PTHREAD=ON -DINSTALL_MBEDTLS_HEADERS=ON -DUSE_SHARED_MBEDTLS_LIBRARY=ON -DUSE_STATIC_MBEDTLS_LIBRARY=ON
RUN mkdir -p /opt/mbedtls/build/x86_64-linux-gnu && \
    cd /opt/mbedtls/build/x86_64-linux-gnu && \
    cmake \
        $MBED_OPTS $LINUX64_OPTS \
        -DLIB_INSTALL_DIR=/usr/lib/x86_64-linux-gnu \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/mbedtls/build/i386-linux-gnu && \
    cd /opt/mbedtls/build/i386-linux-gnu && \
    cmake \
        $MBED_OPTS $LINUX32_OPTS \
        -DLIB_INSTALL_DIR=/usr/lib/i386-linux-gnu \
        -DINSTALL_MBEDTLS_HEADERS=OFF \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/mbedtls/build/x86_64-apple-darwin15 && \
    cd /opt/mbedtls/build/x86_64-apple-darwin15 && \
    cmake $MBED_OPTS $OSX64_OPTS ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/mbedtls/build/i386-apple-darwin15 && \
    cd /opt/mbedtls/build/i386-apple-darwin15 && \
    cmake $MBED_OPTS $OSX32_OPTS ../.. && \
    cmake --build . && cmake --build . --target install
RUN cd /opt/mbedtls && \
    CC=x86_64-w64-mingw32-gcc \
    WINDOWS_BUILD=1 \
    SHARED=1 \
    ZLIB=1 \
    PTHREAD=1 \
    make \
        DESTDIR=/usr/x86_64-w64-mingw32 \
        lib install clean
RUN cd /opt/mbedtls && \
    CC=i686-w64-mingw32-gcc \
    WINDOWS_BUILD=1 \
    SHARED=1 \
    ZLIB=1 \
    PTHREAD=1 \
    make \
        DESTDIR=/usr/i686-w64-mingw32 \
        lib install clean

# libssh2 with mbedTLS
ENV SSH2_OPTS -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DCRYPTO_BACKEND=mbedTLS -DENABLE_ZLIB_COMPRESSION=ON
RUN mkdir -p /opt/ssh2/build/x86_64-linux-gnu && \
    cd /opt/ssh2/build/x86_64-linux-gnu && \
    cmake \
        $SSH2_OPTS $LINUX64_OPTS \
        -DBUILD_SHARED_LIBS=ON \
    ../.. && \
    cmake --build . && cmake --build . --target install && \
    cmake \
        $SSH2_OPTS $LINUX64_OPTS \
        -DBUILD_SHARED_LIBS=OFF \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/ssh2/build/i386-linux-gnu && \
    cd /opt/ssh2/build/i386-linux-gnu && \
    cmake \
        $SSH2_OPTS $LINUX32_OPTS \
        -DCMAKE_TOOLCHAIN_FILE=../../cmake/Toolchain-Linux-32.cmake \
        -DBUILD_SHARED_LIBS=ON \
    ../.. && \
    cmake --build . && cmake --build . --target install && \
    cmake \
        $SSH2_OPTS $LINUX32_OPTS \
        -DCMAKE_TOOLCHAIN_FILE=../../cmake/Toolchain-Linux-32.cmake \
        -DBUILD_SHARED_LIBS=OFF \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/ssh2/build/x86_64-apple-darwin15 && \
    cd /opt/ssh2/build/x86_64-apple-darwin15 && \
    cmake \
        $SSH2_OPTS $OSX64_OPTS \
        -DBUILD_SHARED_LIBS=ON \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/ssh2/build/x86_64-apple-darwin15 && \
    cd /opt/ssh2/build/x86_64-apple-darwin15 && \
    cmake \
        $SSH2_OPTS $OSX64_OPTS \
        -DBUILD_SHARED_LIBS=OFF \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/ssh2/build/i386-apple-darwin15 && \
    cd /opt/ssh2/build/i386-apple-darwin15 && \
    cmake \
        $SSH2_OPTS $OSX32_OPTS \
        -DBUILD_SHARED_LIBS=ON \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/ssh2/build/i386-apple-darwin15 && \
    cd /opt/ssh2/build/i386-apple-darwin15 && \
    cmake \
        $SSH2_OPTS $OSX32_OPTS \
        -DBUILD_SHARED_LIBS=OFF \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/ssh2/build/x86_64-w64-mingw32 && \
    cd /opt/ssh2/build/x86_64-w64-mingw32 && \
    cmake \
        $SSH2_OPTS $WIN64_OPTS \
        -DCMAKE_INSTALL_BINDIR=lib \
        -DBUILD_SHARED_LIBS=ON \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/ssh2/build/x86_64-w64-mingw32 && \
    cd /opt/ssh2/build/x86_64-w64-mingw32 && \
    cmake \
        $SSH2_OPTS $WIN64_OPTS \
        -DCMAKE_INSTALL_BINDIR=lib \
        -DBUILD_SHARED_LIBS=OFF \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/ssh2/build/i686-w64-mingw32 && \
    cd /opt/ssh2/build/i686-w64-mingw32 && \
    cmake \
        $SSH2_OPTS $WIN32_OPTS \
        -DCMAKE_INSTALL_BINDIR=lib \
        -DBUILD_SHARED_LIBS=ON \
    ../.. && \
    cmake --build . && cmake --build . --target install
RUN mkdir -p /opt/ssh2/build/i686-w64-mingw32 && \
    cd /opt/ssh2/build/i686-w64-mingw32 && \
    cmake \
        $SSH2_OPTS $WIN32_OPTS \
        -DCMAKE_INSTALL_BINDIR=lib \
        -DBUILD_SHARED_LIBS=OFF \
    ../.. && \
    cmake --build . && cmake --build . --target install

# install curl with ssh2
ENV CURL_OPTS --enable-shared --enable-static --disable-ldap --disable-sspi --without-librtmp --disable-file --disable-dict --disable-telnet --disable-tftp --disable-rtsp --disable-pop3 --disable-imap --disable-smtp --disable-gopher --disable-smb --disable-manual --disable-versioned-symbols --disable-hidden-symbols --disable-ares --enable-http --enable-ftp --enable-proxy --without-libidn2 --without-libpsl --with-zlib --without-ssl --with-mbedtls --with-libssh2
RUN cd /opt/curl && \
    ./configure \
        $CURL_OPTS \
        --prefix /usr \
        --libdir /usr/lib/x86_64-linux-gnu && \
    make install && make clean
RUN cd /opt/curl && \
    ./configure \
        $CURL_OPTS \
        CFLAGS='-m32 -march=i686' \
        --prefix /usr \
        --libdir /usr/lib/i386-linux-gnu && \
    make install && make clean
RUN cd /opt/curl && \
    CC=x86_64-apple-darwin15-clang \
    ./configure \
        $CURL_OPTS \
        --host=x86_64-apple-darwin15 \
        --with-libssh2=/usr/x86_64-apple-darwin15 \
        --with-mbedtls=/usr/x86_64-apple-darwin15 \
        --with-zlib=/usr/x86_64-apple-darwin15 \
        --prefix=/usr/x86_64-apple-darwin15 && \
    make install && make clean
RUN cd /opt/curl && \
    CC=i386-apple-darwin15-clang \
    ./configure \
        $CURL_OPTS \
        --host=i386-apple-darwin15 \
        --with-libssh2=/usr/i386-apple-darwin15 \
        --with-mbedtls=/usr/i386-apple-darwin15 \
        --with-zlib=/usr/i386-apple-darwin15 \
        --prefix=/usr/i386-apple-darwin15 && \
    make install && make clean
RUN cd /opt/curl && \
    CC=x86_64-w64-mingw32-gcc \
    ./configure \
        $CURL_OPTS \
        --host=x86_64-w64-mingw32 \
        --prefix=/usr/x86_64-w64-mingw32 && \
    make install && make clean
RUN cd /opt/curl && \
    CC=i686-w64-mingw32-gcc \
    ./configure \
        $CURL_OPTS \
        --host=i686-w64-mingw32 \
        --prefix=/usr/i686-w64-mingw32 && \
    make install && make clean

ENV SHELL /bin/bash

ONBUILD WORKDIR /home/mruby/code
ONBUILD ENV GEM_HOME /home/mruby/.gem/

ONBUILD ENV PATH $GEM_HOME/bin/:$PATH
ONBUILD ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/:/usr/local/lib/
